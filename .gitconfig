[init]
    defaultBranch = main

[core]
    safecrlf = false
    # editor = 'C:/Program Files/Notepad++/notepad++.exe' -multiInst -notabbar -nosession -noPlugin
    editor = code --wait
    fscache = true
    fsmonitor = true
    excludesfile = ~/.gitignore_global
    symlinks = true

[color]
    diff = auto
    status = auto
    branch = auto
    interactive = auto
    ui = auto

[color "branch"]
    current = green bold
    local = green
    remote = red bold

[color "diff"]
    meta = yellow bold
    frag = magenta bold
    old = red bold
    new = green bold

[color "status"]
    added = green bold
    changed = yellow bold
    untracked = red

[filter "lfs"]
    clean = git-lfs clean -- %f
    smudge = git-lfs smudge -- %f
    process = git-lfs filter-process
    required = true

[branch]
    # autosetupmerge = always
    autosetuprebase = never

[fetch]
  prune = true

[push]
    autoSetupRemote = true

[pull]
    rebase = true

[rebase]
    autostash = true

[submodule]
    fetchjobs = 8

[credential]
    helper = manager
    credentialStore = dpapi
    azreposCredentialType = oauth
    msauthUseBroker = true
    msauthUseDefaultAccount = true

[diff]
    renames = copies
    # mnemonicprefix = true
    compactionHeuristic = true
    # tool = code

[difftool]
    prompt = false
    trustExitCode = true
    keepBackup = false

[difftool "code"]
    cmd = code --wait --diff $LOCAL $REMOTE

[merge]
    # tool = code

[mergetool]
    prompt = false
    trustExitCode = true
    keepBackup = false

[mergetool "code"]
  cmd = code --wait --merge $REMOTE $LOCAL $BASE $MERGED

[alias]
    # add
	a  = add
    aa = add --all
    unstage = reset HEAD --

    # branch
	b  = branch
	bd  = branch -d
    br = for-each-ref --sort=-committerdate --format=\"%(color:yellow)%(authordate:relative)\t%(color:red)%(authorname)\t%(color:white)%(color:bold)%(refname:short)\" refs/remotes
    brl = branch --sort=-committerdate --format='%(color:yellow)%(authordate:relative)\t%(color:red)%(authorname)\t%(color:white)%(color:bold)%(refname:short)'
    del = branch -d


    # checkout
    co = checkout
    cob = checkout -b

    # switch
    sw   = switch

    # clone
	cl = clone --recursive -j8


    # push
    p = push
    pa = push --all
    pt = push --tags
    done = push origin HEAD

    # pull
    up = !git pull --rebase --prune $@ && git submodule update --init --recursive

    # fetch
    f = fetch --prune --all --tags

    # commit
    c = commit
    cs = commit -S
    cm = commit -m
    cma = commit -a -m
    c- = commit --amend
    # c+ = commit --amend --reuse-message HEAD
    camend = commit --amend --reuse-message HEAD
    cempty = commit --allow-empty
	missing = "!f() { git cherry ${1} ${2} --verbose --abbrev=10 | grep "+ "; }; f"

    cl = clean -df
    cl-all = clean -xdf -e .vscode
    undo = reset HEAD~1 --mixed
    res = !git reset --hard

    # log
    s = status --short --branch
    lg = !git log --pretty=format:\"%C(bold blue)%h%C(reset) - %C(bold green)(%ar)%C(reset) %C(white)%s%C(reset) %C(dim white)- [%an]%C(reset)%C(bold yellow)%d%C(reset)\" --abbrev-commit -30
    last = log -1 HEAD --stat
    lch = log -n 1 --pretty=format:'%H'
    contrib = shortlog -e --summary --numbered

    # diff
    cdiff = difftool --tool code
    diffdir = difftool --dir-diff --tool code


    # config
    root = rev-parse --show-toplevel
    al = config --get-regexp alias

[url "git@github.com:"]
    insteadof = github:

[credential "https://dev.azure.com"]
	useHttpPath = true

[include]
    # A local gitconfig, outside of version control.
    # If the file doesn't exist it is silently ignored
    path = ~/.gitconfig-local

